{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///medium-editor-insert.min.js","webpack:///webpack/bootstrap 2051207706c0e9d2bb65","webpack:///./src/js/Plugin.js","webpack:///./src/js/Core.js","webpack:///./src/js/addons/Embeds.js","webpack:///./src/js/addons/Images.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","get","undefined","_Core","_Core2","MediumEditor","MediumEditorInsert","Extension","extend","name","addons","images","embeds","_initializedAddons","init","prototype","apply","arguments","core","Core","destroy","removeButtons","getCore","getAddons","getAddon","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","_Images","_Images2","_Embeds","_Embeds2","plugin","_plugin","_editor","base","initAddons","addButtons","events","el","className","util","traverseUp","element","classList","contains","parent","_this","addonActions","on","document","toggleButtons","bind","buttons","getElementsByClassName","toggleAddons","Array","forEach","action","handleAddonClick","window","positionButtons","_this2","Images","Embeds","keys","addonOptions","console","error","html","createElement","getEditorId","add","setAttribute","addon","label","innerHTML","body","appendChild","remove","elPosition","addonButton","addonsStyle","addonButtonStyle","position","getSelectedParentElement","getBoundingClientRect","getComputedStyle","top","scrollY","left","scrollX","parseInt","marginLeft","style","shouldDisplayButtonsOnElement","selectElement","showButtons","deselectElement","hideButtons","_this3","addonClassNames","isAddon","belongsToEditor","innerText","trim","getEditorElements","editor","isChildOf","addonName","elementClassName","push","getClosestWithClassName","selectedElement","toggle","e","currentTarget","getAttribute","preventDefault","handleClick","options","assign","log","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","getToolbarButton","ToolbarButton","extensions","button","getButton","getToolbar","MediumEditorToolbar","toolbar","Toolbar","_MediumEditorToolbar","getPrototypeOf","type","buttonOptions","parents","results","elements","static","relativeContainer","createToolbarButtons","forEachExtension","extension","hasForm","getForm","attachEventHandlers","ul","li","btn","buttonName","buttonOpts","display","addBuiltInExtension","isElement","querySelectorAll","firstButtonClass","lastButtonClass","activeElements","preventSelectionUpdates","setTimeout","activeClassName","hideToolbar","showAndUpdateToolbar","container","anchorPreview","showToolbar","positionStaticToolbar","getExtensionByName","hidePreview","preview","uploadUrl","deleteUrl","deleteMethod","deleteData","initToolbar","Math","random","toString","substr","tagName","getElementsByTagName","_this4","unselectImage","removeImage","selectImage","_input","multiple","uploadFiles","click","_this5","paragraph","nodeName","toLowerCase","div","parentNode","insertBefore","files","file","uid","generateRandomString","upload","_this6","reader","FileReader","onload","insertImage","result","readAsDataURL","_this7","xhr","XMLHttpRequest","data","FormData","open","onreadystatechange","readyState","status","image","querySelector","replaceImage","responseText","append","send","url","figure","img","domImage","alt","match","src","Image","removeAttribute","_this8","clickedImage","_this9","keyCode","BACKSPACE","DELETE","indexOf","which","selection","getSelection","selectedHtml","rangeCount","range","getSelectionRange","focusedElement","caretPosition","getCaretOffsets","sibling","previousElementSibling","nextElementSibling","newImages","getSelectionHtml","temp","wrappers","wrapper","deleteFile","childElementCount","next","prev","moveCursor","lastChild","textContent"],"mappings":"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","file":"medium-editor-insert.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MediumEditorInsert\"] = factory();\n\telse\n\t\troot[\"MediumEditorInsert\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MediumEditorInsert\"] = factory();\n\telse\n\t\troot[\"MediumEditorInsert\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.get = undefined;\n\t\n\tvar _Core = __webpack_require__(1);\n\t\n\tvar _Core2 = _interopRequireDefault(_Core);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar get = exports.get = function get(MediumEditor) {\n\t\n\t  var MediumEditorInsert = MediumEditor.Extension.extend({\n\t    name: 'insert',\n\t\n\t    addons: {\n\t      images: true,\n\t      embeds: true\n\t    },\n\t\n\t    _initializedAddons: {},\n\t\n\t    init: function init() {\n\t      MediumEditor.Extension.prototype.init.apply(this, arguments);\n\t\n\t      this.core = new _Core2.default(this, MediumEditor);\n\t    },\n\t\n\t    destroy: function destroy() {\n\t      this.core.removeButtons();\n\t    },\n\t\n\t    getCore: function getCore() {\n\t      return this.core;\n\t    },\n\t\n\t    getAddons: function getAddons() {\n\t      return this._initializedAddons;\n\t    },\n\t\n\t    getAddon: function getAddon(name) {\n\t      return this._initializedAddons[name];\n\t    }\n\t  });\n\t\n\t  return MediumEditorInsert;\n\t};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Images = __webpack_require__(3);\n\t\n\tvar _Images2 = _interopRequireDefault(_Images);\n\t\n\tvar _Embeds = __webpack_require__(2);\n\t\n\tvar _Embeds2 = _interopRequireDefault(_Embeds);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Core = function () {\n\t  function Core(plugin, MediumEditor) {\n\t    _classCallCheck(this, Core);\n\t\n\t    this._plugin = plugin;\n\t    this._editor = this._plugin.base;\n\t    this.MediumEditor = MediumEditor;\n\t    this.initAddons();\n\t    this.addButtons();\n\t    this.events();\n\t  }\n\t\n\t  _createClass(Core, [{\n\t    key: 'getClosestWithClassName',\n\t    value: function getClosestWithClassName(el, className) {\n\t      return this.MediumEditor.util.traverseUp(el, function (element) {\n\t        return element.classList.contains(className);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'isChildOf',\n\t    value: function isChildOf(el, parent) {\n\t      return this.MediumEditor.util.traverseUp(el, function (element) {\n\t        return element === parent;\n\t      }) ? true : false;\n\t    }\n\t  }, {\n\t    key: 'events',\n\t    value: function events() {\n\t      var _this = this;\n\t\n\t      var addonActions = void 0;\n\t\n\t      // This could be chained when medium-editor 5.15.2 is released\n\t      // https://github.com/yabwe/medium-editor/pull/1046\n\t      this._plugin.on(document, 'click', this.toggleButtons.bind(this));\n\t      this._plugin.on(document, 'keyup', this.toggleButtons.bind(this));\n\t      this._plugin.on(this.buttons.getElementsByClassName('medium-editor-insert-buttons-show')[0], 'click', this.toggleAddons.bind(this));\n\t\n\t      // This could be written in one statement when medium-editor 5.15.2 is released\n\t      // https://github.com/yabwe/medium-editor/pull/1046\n\t      addonActions = this.buttons.getElementsByClassName('medium-editor-insert-action');\n\t      Array.prototype.forEach.call(addonActions, function (action) {\n\t        _this._plugin.on(action, 'click', _this.handleAddonClick.bind(_this));\n\t      });\n\t\n\t      this._plugin.on(window, 'resize', this.positionButtons.bind(this));\n\t    }\n\t  }, {\n\t    key: 'initAddons',\n\t    value: function initAddons() {\n\t      var _this2 = this;\n\t\n\t      // Initialize all default addons, we'll delete ones we don't need later\n\t      this._plugin._initializedAddons = {\n\t        images: new _Images2.default(this._plugin, this._plugin.addons.images, this.MediumEditor),\n\t        embeds: new _Embeds2.default(this._plugin, this._plugin.addons.embeds, this.MediumEditor)\n\t      };\n\t\n\t      Object.keys(this._plugin.addons).forEach(function (name) {\n\t        var addonOptions = _this2._plugin.addons[name];\n\t\n\t        // If the addon is custom one\n\t        if (!_this2._plugin._initializedAddons[name]) {\n\t          if (typeof addonOptions === 'function') {\n\t            _this2._plugin._initializedAddons[name] = new addonOptions(_this2._plugin);\n\t          } else {\n\t            window.console.error('I don\\'t know how to initialize custom \"' + name + '\" addon!');\n\t          }\n\t        }\n\t\n\t        // Delete disabled addon\n\t        if (!addonOptions) {\n\t          delete _this2._plugin._initializedAddons[name];\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'addButtons',\n\t    value: function addButtons() {\n\t      var addons = this._plugin.getAddons();\n\t      var html = void 0;\n\t\n\t      this.buttons = document.createElement('div');\n\t      this.buttons.id = 'medium-editor-insert-' + this._plugin.getEditorId();\n\t      this.buttons.classList.add('medium-editor-insert-buttons');\n\t      this.buttons.setAttribute('contentediable', false);\n\t\n\t      html = '<a class=\"medium-editor-insert-buttons-show\">+</a>\\n    <ul class=\"medium-editor-insert-buttons-addons\">';\n\t\n\t      Object.keys(addons).forEach(function (name) {\n\t        var addon = addons[name];\n\t\n\t        html += '<li><a class=\"medium-editor-insert-action\" data-addon=\"' + name + '\">' + addon.label + '</a></li>';\n\t      });\n\t\n\t      html += '</ul>';\n\t\n\t      this.buttons.innerHTML = html;\n\t\n\t      document.body.appendChild(this.buttons);\n\t    }\n\t  }, {\n\t    key: 'removeButtons',\n\t    value: function removeButtons() {\n\t      this.buttons.remove();\n\t    }\n\t  }, {\n\t    key: 'positionButtons',\n\t    value: function positionButtons() {\n\t      var el = void 0,\n\t          elPosition = void 0,\n\t          addons = void 0,\n\t          addonButton = void 0,\n\t          addonsStyle = void 0,\n\t          addonButtonStyle = void 0,\n\t          position = void 0;\n\t\n\t      // Don't position buttons if they aren't active\n\t      if (this.buttons.classList.contains('medium-editor-insert-buttons-active') === false) {\n\t        return;\n\t      }\n\t\n\t      el = this._editor.getSelectedParentElement();\n\t      elPosition = el.getBoundingClientRect();\n\t      addons = this.buttons.getElementsByClassName('medium-editor-insert-buttons-addons')[0];\n\t      addonButton = this.buttons.getElementsByClassName('medium-editor-insert-action')[0];\n\t      addonsStyle = window.getComputedStyle(addons);\n\t      addonButtonStyle = window.getComputedStyle(addonButton);\n\t\n\t      // Calculate position\n\t      position = {\n\t        top: window.scrollY + elPosition.top,\n\t        left: window.scrollX + elPosition.left - parseInt(addonsStyle.left, 10) - parseInt(addonButtonStyle.marginLeft, 10)\n\t      };\n\t\n\t      // If left position is lower than 0, the buttons would be out of the viewport.\n\t      // In that case, align buttons with the editor\n\t      position.left = position.left < 0 ? elPosition.left : position.left;\n\t\n\t      this.buttons.style.left = position.left + 'px';\n\t      this.buttons.style.top = position.top + 'px';\n\t    }\n\t  }, {\n\t    key: 'toggleButtons',\n\t    value: function toggleButtons() {\n\t      var el = this._editor.getSelectedParentElement();\n\t\n\t      if (this.shouldDisplayButtonsOnElement(el)) {\n\t        this.selectElement(el);\n\t        this.showButtons();\n\t      } else {\n\t        this.deselectElement();\n\t        this.hideButtons();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'shouldDisplayButtonsOnElement',\n\t    value: function shouldDisplayButtonsOnElement(el) {\n\t      var _this3 = this;\n\t\n\t      var addons = this._plugin.getAddons(),\n\t          addonClassNames = [];\n\t      var isAddon = false,\n\t          belongsToEditor = false;\n\t\n\t      // Don't show buttons when the element has text\n\t      if (el.innerText.trim() !== '') {\n\t        return false;\n\t      }\n\t\n\t      // Don't show buttons when the editor doesn't belong to editor\n\t      this._plugin.getEditorElements().forEach(function (editor) {\n\t        if (_this3.isChildOf(el, editor)) {\n\t          belongsToEditor = true;\n\t          return;\n\t        }\n\t      });\n\t\n\t      if (!belongsToEditor) {\n\t        return false;\n\t      }\n\t\n\t      // Get class names used by addons\n\t      Object.keys(addons).forEach(function (addonName) {\n\t        var addon = addons[addonName];\n\t        if (addon.elementClassName) {\n\t          addonClassNames.push(addon.elementClassName);\n\t        }\n\t      });\n\t\n\t      // Don't show buttons if the element is an addon element\n\t      // - when the element has an addon class, or some of its parents have it\n\t      addonClassNames.forEach(function (className) {\n\t        if (el.classList.contains(className) || _this3.getClosestWithClassName(el, className)) {\n\t          isAddon = true;\n\t          return;\n\t        }\n\t      });\n\t\n\t      return !isAddon;\n\t    }\n\t  }, {\n\t    key: 'selectElement',\n\t    value: function selectElement(el) {\n\t      this.selectedElement = el;\n\t    }\n\t  }, {\n\t    key: 'deselectElement',\n\t    value: function deselectElement() {\n\t      this.selectedElement = null;\n\t    }\n\t  }, {\n\t    key: 'showButtons',\n\t    value: function showButtons() {\n\t      this.buttons.classList.add('medium-editor-insert-buttons-active');\n\t      this.positionButtons();\n\t    }\n\t  }, {\n\t    key: 'hideButtons',\n\t    value: function hideButtons() {\n\t      this.buttons.classList.remove('medium-editor-insert-buttons-active');\n\t      this.buttons.classList.remove('medium-editor-insert-addons-active');\n\t    }\n\t  }, {\n\t    key: 'toggleAddons',\n\t    value: function toggleAddons() {\n\t      this.buttons.classList.toggle('medium-editor-insert-addons-active');\n\t    }\n\t  }, {\n\t    key: 'handleAddonClick',\n\t    value: function handleAddonClick(e) {\n\t      var name = e.currentTarget.getAttribute('data-addon');\n\t\n\t      e.preventDefault();\n\t\n\t      this._plugin.getAddon(name).handleClick(e);\n\t    }\n\t  }]);\n\t\n\t  return Core;\n\t}();\n\t\n\texports.default = Core;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Embeds = function () {\n\t\tfunction Embeds(plugin, options, MediumEditor) {\n\t\t\t_classCallCheck(this, Embeds);\n\t\n\t\t\tthis.MediumEditor = MediumEditor;\n\t\t\tthis._plugin = plugin;\n\t\t\tthis._editor = this._plugin.base;\n\t\n\t\t\tthis.options = {\n\t\t\t\tlabel: '<span class=\"fa fa-youtube-play\"></span>'\n\t\t\t};\n\t\n\t\t\tObject.assign(this.options, options);\n\t\n\t\t\tthis.label = this.options.label;\n\t\t}\n\t\n\t\t_createClass(Embeds, [{\n\t\t\tkey: 'handleClick',\n\t\t\tvalue: function handleClick() {\n\t\t\t\twindow.console.log('embeds clicked');\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Embeds;\n\t}();\n\t\n\texports.default = Embeds;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar getToolbarButton = exports.getToolbarButton = function getToolbarButton(MediumEditor) {\n\t\n\t  var ToolbarButton = MediumEditor.extensions.button.extend({\n\t    init: function init() {\n\t      this.button = this.document.createElement('button');\n\t      this.button.classList.add('medium-editor-action');\n\t      this.button.innerHTML = '<b>' + this.label + '</b>';\n\t\n\t      this.on(this.button, 'click', this.handleClick.bind(this));\n\t    },\n\t\n\t    getButton: function getButton() {\n\t      return this.button;\n\t    },\n\t\n\t    handleClick: function handleClick() {\n\t      console.log(this.name + ' clicked!');\n\t    }\n\t  });\n\t\n\t  return ToolbarButton;\n\t};\n\t\n\tvar getToolbar = exports.getToolbar = function getToolbar(MediumEditor) {\n\t\n\t  var MediumEditorToolbar = MediumEditor.extensions.toolbar;\n\t\n\t  var Toolbar = function (_MediumEditorToolbar) {\n\t    _inherits(Toolbar, _MediumEditorToolbar);\n\t\n\t    function Toolbar(options) {\n\t      _classCallCheck(this, Toolbar);\n\t\n\t      var _this = _possibleConstructorReturn(this, (Toolbar.__proto__ || Object.getPrototypeOf(Toolbar)).call(this, options));\n\t\n\t      _this.name = options.type + 'Toolbar';\n\t\n\t      options.buttons.forEach(function (buttonOptions) {\n\t        var ToolbarButton = getToolbarButton(MediumEditor);\n\t        var button = new ToolbarButton(Object.assign({}, {\n\t          window: _this.plugin.window,\n\t          document: _this.plugin.document,\n\t          base: _this.plugin.base\n\t        }, buttonOptions));\n\t\n\t        button.init();\n\t        _this.plugin.base.extensions.push(button);\n\t      });\n\t\n\t      _this.window = options.plugin.window;\n\t      _this.document = options.plugin.document;\n\t      _this.base = options.plugin.base;\n\t\n\t      _this.init();\n\t      return _this;\n\t    }\n\t\n\t    _createClass(Toolbar, [{\n\t      key: 'getElementsByClassName',\n\t      value: function getElementsByClassName(parents, className) {\n\t        var results = [];\n\t\n\t        Array.prototype.forEach.call(parents, function (editor) {\n\t          var elements = editor.getElementsByClassName(className);\n\t\n\t          Array.prototype.forEach.call(elements, function (element) {\n\t            results.push(element);\n\t          });\n\t        });\n\t\n\t        return results;\n\t      }\n\t    }, {\n\t      key: 'createToolbar',\n\t      value: function createToolbar() {\n\t        var toolbar = this.document.createElement('div');\n\t\n\t        toolbar.id = 'medium-editor-insert-' + this.type + '-toolbar-' + this.getEditorId();\n\t        toolbar.className = 'medium-editor-toolbar';\n\t\n\t        if (this.static) {\n\t          toolbar.className += ' static-toolbar';\n\t        } else if (this.relativeContainer) {\n\t          toolbar.className += ' medium-editor-relative-toolbar';\n\t        } else {\n\t          toolbar.className += ' medium-editor-stalker-toolbar';\n\t        }\n\t\n\t        toolbar.appendChild(this.createToolbarButtons());\n\t\n\t        // Add any forms that extensions may have\n\t        this.forEachExtension(function (extension) {\n\t          if (extension.hasForm) {\n\t            toolbar.appendChild(extension.getForm());\n\t          }\n\t        });\n\t\n\t        this.attachEventHandlers();\n\t\n\t        return toolbar;\n\t      }\n\t    }, {\n\t      key: 'createToolbarButtons',\n\t      value: function createToolbarButtons() {\n\t        var _this2 = this;\n\t\n\t        var ul = this.document.createElement('ul');\n\t        var li = void 0,\n\t            btn = void 0,\n\t            buttons = void 0,\n\t            extension = void 0,\n\t            buttonName = void 0,\n\t            buttonOpts = void 0;\n\t\n\t        ul.id = 'medium-editor-insert-' + this.type + '-toolbar-actions' + this.getEditorId();\n\t        ul.className = 'medium-editor-toolbar-actions';\n\t        ul.style.display = 'block';\n\t\n\t        this.buttons.forEach(function (button) {\n\t          if (typeof button === 'string') {\n\t            buttonName = button;\n\t            buttonOpts = null;\n\t          } else {\n\t            buttonName = button.name;\n\t            buttonOpts = button;\n\t          }\n\t\n\t          // If the button already exists as an extension, it'll be returned\n\t          // othwerise it'll create the default built-in button\n\t          extension = _this2.base.addBuiltInExtension(buttonName, buttonOpts);\n\t\n\t          if (extension && typeof extension.getButton === 'function') {\n\t            btn = extension.getButton(_this2.base);\n\t            li = _this2.document.createElement('li');\n\t            if (MediumEditor.util.isElement(btn)) {\n\t              li.appendChild(btn);\n\t            } else {\n\t              li.innerHTML = btn;\n\t            }\n\t            ul.appendChild(li);\n\t          }\n\t        }, this);\n\t\n\t        buttons = ul.querySelectorAll('button');\n\t        if (buttons.length > 0) {\n\t          buttons[0].classList.add(this.firstButtonClass);\n\t          buttons[buttons.length - 1].classList.add(this.lastButtonClass);\n\t        }\n\t\n\t        return ul;\n\t      }\n\t    }, {\n\t      key: 'checkState',\n\t      value: function checkState() {\n\t        var _this3 = this;\n\t\n\t        var activeElements = void 0;\n\t\n\t        if (this.base.preventSelectionUpdates) {\n\t          return;\n\t        }\n\t\n\t        // Wait for elements to be selected\n\t        setTimeout(function () {\n\t          activeElements = _this3.getElementsByClassName(_this3.getEditorElements(), _this3.activeClassName);\n\t\n\t          // Hide toolbar when no elements are selected\n\t          if (activeElements.length === 0) {\n\t            return _this3.hideToolbar();\n\t          }\n\t\n\t          // Now we know there's a focused editable with a selection\n\t          _this3.showAndUpdateToolbar();\n\t        }, 10);\n\t      }\n\t    }, {\n\t      key: 'setToolbarPosition',\n\t      value: function setToolbarPosition() {\n\t        var container = this.getElementsByClassName(this.getEditorElements(), this.activeClassName)[0];\n\t        var anchorPreview = void 0;\n\t\n\t        // If there isn't a valid selection, bail\n\t        if (!container) {\n\t          return this;\n\t        }\n\t\n\t        this.showToolbar();\n\t        this.positionStaticToolbar(container);\n\t\n\t        anchorPreview = this.base.getExtensionByName('anchor-preview');\n\t\n\t        if (anchorPreview && typeof anchorPreview.hidePreview === 'function') {\n\t          anchorPreview.hidePreview();\n\t        }\n\t      }\n\t    }]);\n\t\n\t    return Toolbar;\n\t  }(MediumEditorToolbar);\n\t\n\t  return Toolbar;\n\t};\n\t\n\tvar Images = function () {\n\t  function Images(plugin, options, MediumEditor) {\n\t    _classCallCheck(this, Images);\n\t\n\t    this.MediumEditor = MediumEditor;\n\t    this.options = {\n\t      label: '<span class=\"fa fa-camera\"></span>',\n\t      preview: true,\n\t      uploadUrl: 'upload.php',\n\t      deleteUrl: 'delete.php',\n\t      deleteMethod: 'DELETE',\n\t      deleteData: {}\n\t    };\n\t\n\t    Object.assign(this.options, options);\n\t\n\t    this._plugin = plugin;\n\t    this._editor = this._plugin.base;\n\t    this.elementClassName = 'medium-editor-insert-images';\n\t    this.activeClassName = 'medium-editor-insert-image-active';\n\t    this.label = this.options.label;\n\t\n\t    this.initToolbar();\n\t    this.events();\n\t  }\n\t\n\t  _createClass(Images, [{\n\t    key: 'getElementsByClassName',\n\t    value: function getElementsByClassName(parents, className) {\n\t      var results = [];\n\t\n\t      Array.prototype.forEach.call(parents, function (editor) {\n\t        var elements = editor.getElementsByClassName(className);\n\t\n\t        Array.prototype.forEach.call(elements, function (element) {\n\t          results.push(element);\n\t        });\n\t      });\n\t\n\t      return results;\n\t    }\n\t  }, {\n\t    key: 'generateRandomString',\n\t    value: function generateRandomString() {\n\t      var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 15;\n\t\n\t      return Math.random().toString(36).substr(2, length);\n\t    }\n\t  }, {\n\t    key: 'getClosestWithClassName',\n\t    value: function getClosestWithClassName(el, className) {\n\t      return this.MediumEditor.util.traverseUp(el, function (element) {\n\t        return element.classList.contains(className);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'getElementsByTagName',\n\t    value: function getElementsByTagName(parents, tagName) {\n\t      var results = [];\n\t\n\t      Array.prototype.forEach.call(parents, function (editor) {\n\t        var elements = editor.getElementsByTagName(tagName);\n\t\n\t        Array.prototype.forEach.call(elements, function (element) {\n\t          results.push(element);\n\t        });\n\t      });\n\t\n\t      return results;\n\t    }\n\t  }, {\n\t    key: 'events',\n\t    value: function events() {\n\t      var _this4 = this;\n\t\n\t      this._plugin.on(document, 'click', this.unselectImage.bind(this));\n\t      this._plugin.on(document, 'keydown', this.removeImage.bind(this));\n\t\n\t      this._plugin.getEditorElements().forEach(function (editor) {\n\t        _this4._plugin.on(editor, 'click', _this4.selectImage.bind(_this4));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'handleClick',\n\t    value: function handleClick() {\n\t      this._input = document.createElement('input');\n\t      this._input.type = 'file';\n\t      this._input.multiple = true;\n\t\n\t      this._plugin.on(this._input, 'change', this.uploadFiles.bind(this));\n\t\n\t      this._input.click();\n\t    }\n\t  }, {\n\t    key: 'initToolbar',\n\t    value: function initToolbar() {\n\t      var Toolbar = getToolbar(this.MediumEditor);\n\t\n\t      this.toolbar = new Toolbar({\n\t        plugin: this._plugin,\n\t        type: 'images',\n\t        activeClassName: this.activeClassName,\n\t        buttons: [{\n\t          name: 'align-left',\n\t          action: 'left',\n\t          label: 'Left'\n\t        }, {\n\t          name: 'align-center',\n\t          action: 'center',\n\t          label: 'Center'\n\t        }, {\n\t          name: 'align-right',\n\t          action: 'right',\n\t          label: 'Right'\n\t        }]\n\t      });\n\t\n\t      this._editor.extensions.push(this.toolbar);\n\t    }\n\t  }, {\n\t    key: 'uploadFiles',\n\t    value: function uploadFiles() {\n\t      var _this5 = this;\n\t\n\t      var paragraph = this._plugin.getCore().selectedElement;\n\t\n\t      // Replace paragraph with div, because figure is a block element\n\t      // and can't be nested inside paragraphs\n\t      if (paragraph.nodeName.toLowerCase() === 'p') {\n\t        var div = document.createElement('div');\n\t\n\t        paragraph.parentNode.insertBefore(div, paragraph);\n\t        this._plugin.getCore().selectElement(div);\n\t        paragraph.remove();\n\t      }\n\t\n\t      Array.prototype.forEach.call(this._input.files, function (file) {\n\t        // Generate uid for this image, so we can identify it later\n\t        // and we can replace preview image with uploaded one\n\t        var uid = _this5.generateRandomString();\n\t\n\t        if (_this5.options.preview) {\n\t          _this5.preview(file, uid);\n\t        }\n\t\n\t        _this5.upload(file, uid);\n\t      });\n\t\n\t      this._plugin.getCore().hideButtons();\n\t    }\n\t  }, {\n\t    key: 'preview',\n\t    value: function preview(file, uid) {\n\t      var _this6 = this;\n\t\n\t      var reader = new FileReader();\n\t\n\t      reader.onload = function (e) {\n\t        _this6.insertImage(e.target.result, uid);\n\t      };\n\t\n\t      reader.readAsDataURL(file);\n\t    }\n\t  }, {\n\t    key: 'upload',\n\t    value: function upload(file, uid) {\n\t      var _this7 = this;\n\t\n\t      var xhr = new XMLHttpRequest(),\n\t          data = new FormData();\n\t\n\t      xhr.open(\"POST\", this.options.uploadUrl, true);\n\t      xhr.onreadystatechange = function () {\n\t        if (xhr.readyState === 4 && xhr.status === 200) {\n\t          var image = _this7._plugin.getCore().selectedElement.querySelector('[data-uid=\"' + uid + '\"]');\n\t\n\t          if (image) {\n\t            _this7.replaceImage(image, xhr.responseText);\n\t          } else {\n\t            _this7.insertImage(xhr.responseText);\n\t          }\n\t        }\n\t      };\n\t\n\t      data.append(\"file\", file);\n\t      xhr.send(data);\n\t    }\n\t  }, {\n\t    key: 'insertImage',\n\t    value: function insertImage(url, uid) {\n\t      var el = this._plugin.getCore().selectedElement,\n\t          figure = document.createElement('figure'),\n\t          img = document.createElement('img');\n\t      var domImage = void 0;\n\t\n\t      img.alt = '';\n\t\n\t      if (uid) {\n\t        img.setAttribute('data-uid', uid);\n\t      }\n\t\n\t      // If we're dealing with a preview image,\n\t      // we don't have to preload it before displaying\n\t      if (url.match(/^data:/)) {\n\t        img.src = url;\n\t        figure.appendChild(img);\n\t        el.appendChild(figure);\n\t      } else {\n\t        domImage = new Image();\n\t        domImage.onload = function () {\n\t          img.src = domImage.src;\n\t          figure.appendChild(img);\n\t          el.appendChild(figure);\n\t        };\n\t        domImage.src = url;\n\t      }\n\t\n\t      el.classList.add(this.elementClassName);\n\t\n\t      // Return domImage so we can test this function easily\n\t      return domImage;\n\t    }\n\t  }, {\n\t    key: 'replaceImage',\n\t    value: function replaceImage(image, url) {\n\t      var domImage = new Image();\n\t\n\t      domImage.onload = function () {\n\t        image.src = domImage.src;\n\t        image.removeAttribute('data-uid');\n\t      };\n\t\n\t      domImage.src = url;\n\t\n\t      // Return domImage so we can test this function easily\n\t      return domImage;\n\t    }\n\t  }, {\n\t    key: 'selectImage',\n\t    value: function selectImage(e) {\n\t      var el = e.target;\n\t\n\t      if (el.nodeName.toLowerCase() === 'img' && this.getClosestWithClassName(el, this.elementClassName)) {\n\t        el.classList.add(this.activeClassName);\n\t\n\t        this._editor.selectElement(el);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'unselectImage',\n\t    value: function unselectImage(e) {\n\t      var _this8 = this;\n\t\n\t      var el = e.target;\n\t      var clickedImage = void 0,\n\t          images = void 0;\n\t\n\t      // Unselect all selected images. If an image is clicked, unselect all except this one.\n\t      if (el.nodeName.toLowerCase() === 'img' && el.classList.contains(this.activeClassName)) {\n\t        clickedImage = el;\n\t      }\n\t\n\t      images = this.getElementsByClassName(this._plugin.getEditorElements(), this.activeClassName);\n\t      Array.prototype.forEach.call(images, function (image) {\n\t        if (image !== clickedImage) {\n\t          image.classList.remove(_this8.activeClassName);\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'removeImage',\n\t    value: function removeImage(e) {\n\t      var _this9 = this;\n\t\n\t      if ([this.MediumEditor.util.keyCode.BACKSPACE, this.MediumEditor.util.keyCode.DELETE].indexOf(e.which) > -1) {\n\t        var images = this.getElementsByClassName(this._plugin.getEditorElements(), this.activeClassName),\n\t            selection = window.getSelection();\n\t        var selectedHtml = void 0;\n\t\n\t        // Remove image even if it's not selected, but backspace/del is pressed in text\n\t        if (selection && selection.rangeCount) {\n\t          var range = this.MediumEditor.selection.getSelectionRange(document),\n\t              focusedElement = this.MediumEditor.selection.getSelectedParentElement(range),\n\t              caretPosition = this.MediumEditor.selection.getCaretOffsets(focusedElement).left;\n\t          var sibling = void 0;\n\t\n\t          // Is backspace pressed and caret is at the beginning of a paragraph, get previous element\n\t          if (e.which === this.MediumEditor.util.keyCode.BACKSPACE && caretPosition === 0) {\n\t            sibling = focusedElement.previousElementSibling;\n\t            // Is del pressed and caret is at the end of a paragraph, get next element\n\t          } else if (e.which === this.MediumEditor.util.keyCode.DELETE && caretPosition === focusedElement.innerText.length) {\n\t            sibling = focusedElement.nextElementSibling;\n\t          }\n\t\n\t          if (sibling && sibling.classList.contains('medium-editor-insert-images')) {\n\t            var newImages = sibling.getElementsByTagName('img');\n\t            Array.prototype.forEach.call(newImages, function (image) {\n\t              images.push(image);\n\t            });\n\t          }\n\t\n\t          // If text is selected, find images in the selection\n\t          selectedHtml = this.MediumEditor.selection.getSelectionHtml(document);\n\t          if (selectedHtml) {\n\t            var temp = document.createElement('div');\n\t            var wrappers = void 0,\n\t                _newImages = void 0;\n\t            temp.innerHTML = selectedHtml;\n\t\n\t            wrappers = temp.getElementsByClassName('medium-editor-insert-images');\n\t            _newImages = this.getElementsByTagName(wrappers, 'img');\n\t\n\t            Array.prototype.forEach.call(_newImages, function (image) {\n\t              images.push(image);\n\t            });\n\t          }\n\t        }\n\t\n\t        if (images.length) {\n\t          if (!selectedHtml) {\n\t            e.preventDefault();\n\t          }\n\t\n\t          images.forEach(function (image) {\n\t            var wrapper = _this9.getClosestWithClassName(image, 'medium-editor-insert-images');\n\t            _this9.deleteFile(image.src);\n\t\n\t            image.parentNode.remove();\n\t\n\t            // If wrapper has no images anymore, remove it\n\t            if (wrapper.childElementCount === 0) {\n\t              var next = wrapper.nextElementSibling,\n\t                  prev = wrapper.previousElementSibling;\n\t\n\t              wrapper.remove();\n\t\n\t              // If there is no selection, move cursor at the beginning of next paragraph (if delete is pressed),\n\t              // or nove it at the end of previous paragraph (if backspace is pressed)\n\t              if (!selectedHtml) {\n\t                if (next || prev) {\n\t                  if (next && e.which === _this9.MediumEditor.util.keyCode.DELETE || !prev) {\n\t                    _this9.MediumEditor.selection.moveCursor(document, next, 0);\n\t                  } else {\n\t                    _this9.MediumEditor.selection.moveCursor(document, prev.lastChild, prev.lastChild.textContent.length);\n\t                  }\n\t                }\n\t              }\n\t            }\n\t          });\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'deleteFile',\n\t    value: function deleteFile(image) {\n\t      if (this.options.deleteUrl) {\n\t        var xhr = new XMLHttpRequest(),\n\t            data = Object.assign({}, {\n\t          file: image\n\t        }, this.options.deleteData);\n\t\n\t        xhr.open(this.options.deleteMethod, this.options.deleteUrl, true);\n\t        xhr.send(data);\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Images;\n\t}();\n\t\n\texports.default = Images;\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// medium-editor-insert.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2051207706c0e9d2bb65","import Core from './Core';\n\nexport const get = (MediumEditor) => {\n\n  const MediumEditorInsert = MediumEditor.Extension.extend({\n    name: 'insert',\n\n    addons: {\n      images: true,\n      embeds: true\n    },\n\n    _initializedAddons: {},\n\n    init: function() {\n      MediumEditor.Extension.prototype.init.apply(this, arguments);\n\n      this.core = new Core(this, MediumEditor);\n    },\n\n    destroy: function() {\n      this.core.removeButtons();\n    },\n\n    getCore: function() {\n      return this.core;\n    },\n\n    getAddons: function () {\n      return this._initializedAddons;\n    },\n\n    getAddon: function(name) {\n      return this._initializedAddons[name];\n    }\n  });\n\n  return MediumEditorInsert\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Plugin.js","import Images from './addons/Images';\nimport Embeds from './addons/Embeds';\n\nexport default class Core {\n\n  constructor(plugin, MediumEditor) {\n    this._plugin = plugin;\n    this._editor = this._plugin.base;\n    this.MediumEditor = MediumEditor\n    this.initAddons();\n    this.addButtons();\n    this.events();\n  }\n\n  getClosestWithClassName (el, className) {\n    return this.MediumEditor.util.traverseUp(el, (element) => {\n      return element.classList.contains(className);\n    });\n  }\n\n  isChildOf (el, parent) {\n    return this.MediumEditor.util.traverseUp(el, (element) => {\n      return element === parent;\n    }) ? true : false;\n  }\n\n  events() {\n    let addonActions;\n\n    // This could be chained when medium-editor 5.15.2 is released\n    // https://github.com/yabwe/medium-editor/pull/1046\n    this._plugin.on(document, 'click', this.toggleButtons.bind(this));\n    this._plugin.on(document, 'keyup', this.toggleButtons.bind(this));\n    this._plugin.on(this.buttons.getElementsByClassName('medium-editor-insert-buttons-show')[0], 'click', this.toggleAddons.bind(this));\n\n    // This could be written in one statement when medium-editor 5.15.2 is released\n    // https://github.com/yabwe/medium-editor/pull/1046\n    addonActions = this.buttons.getElementsByClassName('medium-editor-insert-action');\n    Array.prototype.forEach.call(addonActions, (action) => {\n      this._plugin.on(action, 'click', this.handleAddonClick.bind(this));\n    });\n\n    this._plugin.on(window, 'resize', this.positionButtons.bind(this));\n  }\n\n  initAddons() {\n    // Initialize all default addons, we'll delete ones we don't need later\n    this._plugin._initializedAddons = {\n      images: new Images(this._plugin, this._plugin.addons.images, this.MediumEditor),\n      embeds: new Embeds(this._plugin, this._plugin.addons.embeds, this.MediumEditor)\n    };\n\n    Object.keys(this._plugin.addons).forEach((name) => {\n      const addonOptions = this._plugin.addons[name];\n\n      // If the addon is custom one\n      if (!this._plugin._initializedAddons[name]) {\n        if (typeof addonOptions === 'function') {\n          this._plugin._initializedAddons[name] = new addonOptions(this._plugin);\n        } else {\n          window.console.error(`I don't know how to initialize custom \"${name}\" addon!`);\n        }\n      }\n\n      // Delete disabled addon\n      if (!addonOptions) {\n        delete this._plugin._initializedAddons[name];\n      }\n    });\n  }\n\n  addButtons() {\n    const addons = this._plugin.getAddons();\n    let html;\n\n    this.buttons = document.createElement('div');\n    this.buttons.id = `medium-editor-insert-${this._plugin.getEditorId()}`;\n    this.buttons.classList.add('medium-editor-insert-buttons');\n    this.buttons.setAttribute('contentediable', false);\n\n    html = `<a class=\"medium-editor-insert-buttons-show\">+</a>\n    <ul class=\"medium-editor-insert-buttons-addons\">`;\n\n    Object.keys(addons).forEach((name) => {\n      const addon = addons[name];\n\n      html += `<li><a class=\"medium-editor-insert-action\" data-addon=\"${name}\">${addon.label}</a></li>`;\n    });\n\n    html += `</ul>`;\n\n    this.buttons.innerHTML = html;\n\n    document.body.appendChild(this.buttons);\n  }\n\n  removeButtons() {\n    this.buttons.remove();\n  }\n\n  positionButtons() {\n    let el, elPosition, addons, addonButton, addonsStyle, addonButtonStyle, position;\n\n    // Don't position buttons if they aren't active\n    if (this.buttons.classList.contains('medium-editor-insert-buttons-active') === false) {\n      return;\n    }\n\n    el = this._editor.getSelectedParentElement();\n    elPosition = el.getBoundingClientRect();\n    addons = this.buttons.getElementsByClassName('medium-editor-insert-buttons-addons')[0];\n    addonButton = this.buttons.getElementsByClassName('medium-editor-insert-action')[0];\n    addonsStyle = window.getComputedStyle(addons);\n    addonButtonStyle = window.getComputedStyle(addonButton);\n\n    // Calculate position\n    position = {\n      top: window.scrollY + elPosition.top,\n      left: window.scrollX + elPosition.left - parseInt(addonsStyle.left, 10) - parseInt(addonButtonStyle.marginLeft, 10)\n    };\n\n    // If left position is lower than 0, the buttons would be out of the viewport.\n    // In that case, align buttons with the editor\n    position.left = position.left < 0 ? elPosition.left : position.left;\n\n    this.buttons.style.left = `${position.left}px`;\n    this.buttons.style.top = `${position.top}px`;\n  }\n\n  toggleButtons() {\n    const el = this._editor.getSelectedParentElement();\n\n    if (this.shouldDisplayButtonsOnElement(el)) {\n      this.selectElement(el);\n      this.showButtons();\n    } else {\n      this.deselectElement();\n      this.hideButtons();\n    }\n  }\n\n        shouldDisplayButtonsOnElement(el) {\n          const addons = this._plugin.getAddons(),\n                addonClassNames = [];\n          let isAddon = false,\n              belongsToEditor = false;\n\n          // Don't show buttons when the element has text\n          if (el.innerText.trim() !== '') {\n            return false;\n          }\n\n          // Don't show buttons when the editor doesn't belong to editor\n          this._plugin.getEditorElements().forEach((editor) => {\n            if (this.isChildOf(el, editor)) {\n                belongsToEditor = true;\n                return;\n            }\n        });\n\n        if (!belongsToEditor) {\n            return false;\n        }\n\n        // Get class names used by addons\n        Object.keys(addons).forEach((addonName) => {\n            const addon = addons[addonName];\n            if (addon.elementClassName) {\n                addonClassNames.push(addon.elementClassName);\n            }\n        });\n\n        // Don't show buttons if the element is an addon element\n        // - when the element has an addon class, or some of its parents have it\n        addonClassNames.forEach((className) => {\n            if (el.classList.contains(className) || this.getClosestWithClassName(el, className)) {\n                isAddon = true;\n                return;\n            }\n        });\n\n        return !isAddon;\n    }\n\n    selectElement(el) {\n        this.selectedElement = el;\n    }\n\n    deselectElement() {\n        this.selectedElement = null;\n    }\n\n    showButtons() {\n        this.buttons.classList.add('medium-editor-insert-buttons-active');\n        this.positionButtons();\n    }\n\n    hideButtons() {\n        this.buttons.classList.remove('medium-editor-insert-buttons-active');\n        this.buttons.classList.remove('medium-editor-insert-addons-active');\n    }\n\n    toggleAddons() {\n        this.buttons.classList.toggle('medium-editor-insert-addons-active');\n    }\n\n    handleAddonClick(e) {\n        const name = e.currentTarget.getAttribute('data-addon');\n\n        e.preventDefault();\n\n        this._plugin.getAddon(name).handleClick(e);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Core.js","export default class Embeds {\n\n  constructor(plugin, options, MediumEditor) {\n    this.MediumEditor = MediumEditor\n    this._plugin = plugin;\n        this._editor = this._plugin.base;\n\n\t\tthis.options = {\n\t\t\tlabel: '<span class=\"fa fa-youtube-play\"></span>'\n\t\t};\n\n\t\tObject.assign(this.options, options);\n\n\t\tthis.label = this.options.label;\n\t}\n\n\thandleClick() {\n\t\twindow.console.log('embeds clicked');\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/addons/Embeds.js","export const getToolbarButton = (MediumEditor) => {\n\n  const ToolbarButton = MediumEditor.extensions.button.extend({\n    init: function() {\n      this.button = this.document.createElement('button');\n      this.button.classList.add('medium-editor-action');\n      this.button.innerHTML = `<b>${this.label}</b>`;\n\n      this.on(this.button, 'click', this.handleClick.bind(this));\n    },\n\n    getButton: function() {\n      return this.button;\n    },\n\n    handleClick: function() {\n      console.log(`${this.name} clicked!`);\n    }\n  });\n\n  return ToolbarButton\n}\n\nexport const getToolbar = (MediumEditor) => {\n\n    const MediumEditorToolbar = MediumEditor.extensions.toolbar;\n\n  class Toolbar extends MediumEditorToolbar {\n\n    constructor(options) {\n      super(options);\n\n      this.name = `${options.type}Toolbar`;\n\n      options.buttons.forEach((buttonOptions) => {\n        const ToolbarButton = getToolbarButton(MediumEditor)\n        const button = new ToolbarButton(Object.assign({}, {\n          window: this.plugin.window,\n          document: this.plugin.document,\n          base: this.plugin.base\n        }, buttonOptions));\n\n        button.init();\n        this.plugin.base.extensions.push(button);\n      });\n\n      this.window = options.plugin.window;\n      this.document = options.plugin.document;\n      this.base = options.plugin.base;\n\n      this.init();\n    }\n\n    getElementsByClassName (parents, className) {\n      const results = [];\n\n      Array.prototype.forEach.call(parents, (editor) => {\n        const elements = editor.getElementsByClassName(className);\n\n        Array.prototype.forEach.call(elements, (element) => {\n          results.push(element);\n        });\n      });\n\n      return results;\n    }\n\n    createToolbar() {\n      const toolbar = this.document.createElement('div');\n\n      toolbar.id = `medium-editor-insert-${this.type}-toolbar-${this.getEditorId()}`;\n      toolbar.className = 'medium-editor-toolbar';\n\n      if (this.static) {\n        toolbar.className += ' static-toolbar';\n      } else if (this.relativeContainer) {\n        toolbar.className += ' medium-editor-relative-toolbar';\n      } else {\n        toolbar.className += ' medium-editor-stalker-toolbar';\n      }\n\n      toolbar.appendChild(this.createToolbarButtons());\n\n      // Add any forms that extensions may have\n      this.forEachExtension((extension) => {\n        if (extension.hasForm) {\n          toolbar.appendChild(extension.getForm());\n        }\n      });\n\n      this.attachEventHandlers();\n\n      return toolbar;\n    }\n\n    createToolbarButtons() {\n      const ul = this.document.createElement('ul');\n      let li,\n          btn,\n          buttons,\n          extension,\n          buttonName,\n          buttonOpts;\n\n      ul.id = `medium-editor-insert-${this.type}-toolbar-actions${this.getEditorId()}`;\n      ul.className = 'medium-editor-toolbar-actions';\n      ul.style.display = 'block';\n\n      this.buttons.forEach((button) => {\n        if (typeof button === 'string') {\n          buttonName = button;\n          buttonOpts = null;\n        } else {\n          buttonName = button.name;\n          buttonOpts = button;\n        }\n\n        // If the button already exists as an extension, it'll be returned\n        // othwerise it'll create the default built-in button\n        extension = this.base.addBuiltInExtension(buttonName, buttonOpts);\n\n        if (extension && typeof extension.getButton === 'function') {\n          btn = extension.getButton(this.base);\n          li = this.document.createElement('li');\n          if (MediumEditor.util.isElement(btn)) {\n            li.appendChild(btn);\n          } else {\n            li.innerHTML = btn;\n          }\n          ul.appendChild(li);\n        }\n      }, this);\n\n      buttons = ul.querySelectorAll('button');\n      if (buttons.length > 0) {\n        buttons[0].classList.add(this.firstButtonClass);\n        buttons[buttons.length - 1].classList.add(this.lastButtonClass);\n      }\n\n      return ul;\n    }\n\n    checkState() {\n      let activeElements;\n\n      if (this.base.preventSelectionUpdates) {\n        return;\n      }\n\n      // Wait for elements to be selected\n      setTimeout(() => {\n        activeElements = this.getElementsByClassName(this.getEditorElements(), this.activeClassName);\n\n        // Hide toolbar when no elements are selected\n        if (activeElements.length === 0) {\n          return this.hideToolbar();\n        }\n\n        // Now we know there's a focused editable with a selection\n        this.showAndUpdateToolbar();\n      }, 10);\n    }\n\n    setToolbarPosition() {\n      const container = this.getElementsByClassName(this.getEditorElements(), this.activeClassName)[0];\n      let anchorPreview;\n\n      // If there isn't a valid selection, bail\n      if (!container) {\n        return this;\n      }\n\n      this.showToolbar();\n      this.positionStaticToolbar(container);\n\n      anchorPreview = this.base.getExtensionByName('anchor-preview');\n\n      if (anchorPreview && typeof anchorPreview.hidePreview === 'function') {\n        anchorPreview.hidePreview();\n      }\n    }\n  }\n\n  return Toolbar\n}\n\nexport default class Images {\n\n  constructor(plugin, options, MediumEditor) {\n    this.MediumEditor = MediumEditor\n    this.options = {\n      label: '<span class=\"fa fa-camera\"></span>',\n      preview: true,\n      uploadUrl: 'upload.php',\n      deleteUrl: 'delete.php',\n      deleteMethod: 'DELETE',\n      deleteData: {}\n    };\n\n    Object.assign(this.options, options);\n\n    this._plugin = plugin;\n    this._editor = this._plugin.base;\n    this.elementClassName = 'medium-editor-insert-images';\n    this.activeClassName = 'medium-editor-insert-image-active';\n    this.label = this.options.label;\n\n    this.initToolbar();\n    this.events();\n  }\n\n  getElementsByClassName (parents, className) {\n    const results = [];\n\n    Array.prototype.forEach.call(parents, (editor) => {\n      const elements = editor.getElementsByClassName(className);\n\n      Array.prototype.forEach.call(elements, (element) => {\n        results.push(element);\n      });\n    });\n\n    return results;\n  }\n\n  generateRandomString (length = 15) {\n    return Math.random().toString(36).substr(2, length);\n  }\n\n  getClosestWithClassName (el, className) {\n    return this.MediumEditor.util.traverseUp(el, (element) => {\n      return element.classList.contains(className);\n    });\n  }\n\n  getElementsByTagName (parents, tagName) {\n    const results = [];\n\n    Array.prototype.forEach.call(parents, (editor) => {\n      const elements = editor.getElementsByTagName(tagName);\n\n      Array.prototype.forEach.call(elements, (element) => {\n        results.push(element);\n      });\n    });\n\n    return results;\n  }\n\n  events() {\n    this._plugin.on(document, 'click', this.unselectImage.bind(this));\n    this._plugin.on(document, 'keydown', this.removeImage.bind(this));\n\n    this._plugin.getEditorElements().forEach((editor) => {\n      this._plugin.on(editor, 'click', this.selectImage.bind(this));\n    });\n  }\n\n  handleClick() {\n    this._input = document.createElement('input');\n    this._input.type = 'file';\n    this._input.multiple = true;\n\n    this._plugin.on(this._input, 'change', this.uploadFiles.bind(this));\n\n    this._input.click();\n  }\n\n  initToolbar() {\n    const Toolbar = getToolbar(this.MediumEditor)\n\n    this.toolbar = new Toolbar({\n      plugin: this._plugin,\n      type: 'images',\n      activeClassName: this.activeClassName,\n      buttons: [\n        {\n          name: 'align-left',\n          action: 'left',\n          label: 'Left'\n        },\n        {\n          name: 'align-center',\n          action: 'center',\n          label: 'Center'\n        },\n        {\n          name: 'align-right',\n          action: 'right',\n          label: 'Right'\n        }\n      ]\n    });\n\n    this._editor.extensions.push(this.toolbar);\n  }\n\n  uploadFiles() {\n    const paragraph = this._plugin.getCore().selectedElement;\n\n    // Replace paragraph with div, because figure is a block element\n    // and can't be nested inside paragraphs\n    if (paragraph.nodeName.toLowerCase() === 'p') {\n      const div = document.createElement('div');\n\n      paragraph.parentNode.insertBefore(div, paragraph);\n      this._plugin.getCore().selectElement(div);\n      paragraph.remove();\n    }\n\n    Array.prototype.forEach.call(this._input.files, (file) => {\n      // Generate uid for this image, so we can identify it later\n      // and we can replace preview image with uploaded one\n      const uid = this.generateRandomString();\n\n      if (this.options.preview) {\n\tthis.preview(file, uid);\n      }\n\n      this.upload(file, uid);\n    });\n\n    this._plugin.getCore().hideButtons();\n  }\n\n  preview(file, uid) {\n    const reader = new FileReader();\n\n    reader.onload = (e) => {\n      this.insertImage(e.target.result, uid);\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  upload(file, uid) {\n    const xhr = new XMLHttpRequest(),\n\t  data = new FormData();\n\n    xhr.open(\"POST\", this.options.uploadUrl, true);\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        const image = this._plugin.getCore().selectedElement.querySelector(`[data-uid=\"${uid}\"]`);\n\n        if (image) {\n          this.replaceImage(image, xhr.responseText);\n        } else {\n          this.insertImage(xhr.responseText);\n        }\n      }\n    };\n\n    data.append(\"file\", file);\n    xhr.send(data);\n  }\n\n  insertImage(url, uid) {\n    const el = this._plugin.getCore().selectedElement,\n          figure = document.createElement('figure'),\n          img = document.createElement('img');\n    let domImage;\n\n    img.alt = '';\n\n    if (uid) {\n      img.setAttribute('data-uid', uid);\n    }\n\n    // If we're dealing with a preview image,\n    // we don't have to preload it before displaying\n    if (url.match(/^data:/)) {\n      img.src = url;\n      figure.appendChild(img);\n      el.appendChild(figure);\n    } else {\n      domImage = new Image();\n      domImage.onload = () => {\n        img.src = domImage.src;\n        figure.appendChild(img);\n        el.appendChild(figure);\n      };\n      domImage.src = url;\n    }\n\n    el.classList.add(this.elementClassName);\n\n    // Return domImage so we can test this function easily\n    return domImage;\n  }\n\n  replaceImage(image, url) {\n    const domImage = new Image();\n\n    domImage.onload = () => {\n      image.src = domImage.src;\n      image.removeAttribute('data-uid');\n    };\n\n    domImage.src = url;\n\n    // Return domImage so we can test this function easily\n    return domImage;\n  }\n\n  selectImage(e) {\n    const el = e.target;\n\n    if (el.nodeName.toLowerCase() === 'img' && this.getClosestWithClassName(el, this.elementClassName)) {\n      el.classList.add(this.activeClassName);\n\n      this._editor.selectElement(el);\n    }\n  }\n\n  unselectImage(e) {\n    const el = e.target;\n    let clickedImage, images;\n\n    // Unselect all selected images. If an image is clicked, unselect all except this one.\n    if (el.nodeName.toLowerCase() === 'img' && el.classList.contains(this.activeClassName)) {\n      clickedImage = el;\n    }\n\n    images = this.getElementsByClassName(this._plugin.getEditorElements(), this.activeClassName);\n    Array.prototype.forEach.call(images, (image) => {\n      if (image !== clickedImage) {\n        image.classList.remove(this.activeClassName);\n      }\n    });\n  }\n\n  removeImage(e) {\n    if ([this.MediumEditor.util.keyCode.BACKSPACE, this.MediumEditor.util.keyCode.DELETE].indexOf(e.which) > -1) {\n      const images = this.getElementsByClassName(this._plugin.getEditorElements(), this.activeClassName),\n            selection = window.getSelection();\n      let selectedHtml;\n\n      // Remove image even if it's not selected, but backspace/del is pressed in text\n      if (selection && selection.rangeCount) {\n        const range = this.MediumEditor.selection.getSelectionRange(document),\n              focusedElement = this.MediumEditor.selection.getSelectedParentElement(range),\n              caretPosition = this.MediumEditor.selection.getCaretOffsets(focusedElement).left;\n        let sibling;\n\n        // Is backspace pressed and caret is at the beginning of a paragraph, get previous element\n        if (e.which === this.MediumEditor.util.keyCode.BACKSPACE && caretPosition === 0) {\n          sibling = focusedElement.previousElementSibling;\n          // Is del pressed and caret is at the end of a paragraph, get next element\n        } else if (e.which === this.MediumEditor.util.keyCode.DELETE && caretPosition === focusedElement.innerText.length) {\n          sibling = focusedElement.nextElementSibling;\n        }\n\n        if (sibling && sibling.classList.contains('medium-editor-insert-images')) {\n          const newImages = sibling.getElementsByTagName('img');\n          Array.prototype.forEach.call(newImages, (image) => {\n            images.push(image);\n          });\n        }\n\n        // If text is selected, find images in the selection\n        selectedHtml = this.MediumEditor.selection.getSelectionHtml(document);\n        if (selectedHtml) {\n          const temp = document.createElement('div');\n          let wrappers, newImages;\n          temp.innerHTML = selectedHtml;\n\n          wrappers = temp.getElementsByClassName('medium-editor-insert-images');\n          newImages = this.getElementsByTagName(wrappers, 'img');\n\n          Array.prototype.forEach.call(newImages, (image) => {\n            images.push(image);\n          });\n        }\n      }\n\n      if (images.length) {\n                if (!selectedHtml) {\n                    e.preventDefault();\n                }\n\n                images.forEach((image) => {\n                    const wrapper = this.getClosestWithClassName(image, 'medium-editor-insert-images');\n                    this.deleteFile(image.src);\n\n                    image.parentNode.remove();\n\n                    // If wrapper has no images anymore, remove it\n                    if (wrapper.childElementCount === 0) {\n                        const next = wrapper.nextElementSibling,\n                            prev = wrapper.previousElementSibling;\n\n                        wrapper.remove();\n\n                        // If there is no selection, move cursor at the beginning of next paragraph (if delete is pressed),\n                        // or nove it at the end of previous paragraph (if backspace is pressed)\n                        if (!selectedHtml) {\n                            if (next || prev) {\n                                if ((next && e.which === this.MediumEditor.util.keyCode.DELETE) || !prev) {\n                                    this.MediumEditor.selection.moveCursor(document, next, 0);\n                                } else {\n                                    this.MediumEditor.selection.moveCursor(document, prev.lastChild, prev.lastChild.textContent.length);\n                                }\n                            }\n                        }\n                    }\n                });\n            }\n        }\n    }\n\n    deleteFile(image) {\n        if (this.options.deleteUrl) {\n            const xhr = new XMLHttpRequest(),\n                data = Object.assign({}, {\n                    file: image\n                }, this.options.deleteData);\n\n            xhr.open(this.options.deleteMethod, this.options.deleteUrl, true);\n            xhr.send(data);\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/addons/Images.js"],"sourceRoot":""}